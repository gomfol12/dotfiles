### ==================== general hotkeys ==================== ###

### starting programs ###

# open $TERMINAL
super + t
    $TERMINAL

# open $TERMINAL
shift + mod1 + Return
    $TERMINAL

# open $BROWSER
super + c
	$BROWSER

# lock screen
super + l
	betterlockscreen -l

# open vscode
super + v
	/usr/bin/code

# open discord
super + d
	/usr/bin/discord

# open keepassxc
super + k
	/usr/bin/keepassxc

# open lutirs
super + b
	/usr/bin/lutris

# open nemo
super + e
	/usr/bin/nemo

# open spt.sh
super + m
	$TERMINAL -e "$SCRIPT_DIR/wrapper/spt.sh"

# open steam
super + s
	/usr/bin/steam

# open teams (schmutz)
#super + z
#	/usr/bin/teams

# open thunderbird
super + o
	/usr/bin/thunderbird

# open libreoffice
super + i
    /usr/bin/libreoffice

# open xournalpp
super + x
    /usr/bin/xournalpp

### multimedia keys ###

# kill spotifyd
XF86AudioStop
	killall spotifyd

# spotifyd next
XF86AudioNext
	playerctl --player spotifyd next

# spotifyd previous
XF86AudioPrev
	playerctl --player spotifyd previous

# spotifyd play-pause
XF86AudioPlay
	playerctl --player spotifyd play-pause

### util ###

# remove formating from copied text
mod1 + x
    xclip -selection c -o | xclip -selection c

# open clipmenu
# this is actually mod1 + y TODO: write own keymap
mod1 + z
   clipmenu

# open dmenu websearch
super + w
    dmenu_websearch.sh

# open application launcher
Menu
	dmenu_run

# take a screenshotter
Print
	screenshotter.sh

# toggle picom
Pause
	togglePicom.sh

# switch audio output
Scroll_Lock
	switchAudioOutput.sh

# open colorpicker
super + n
    colorpicker --short --one-shot --preview | xclip -selection c

# open pass menu
super + p
    pw.sh

# open keybind list
super + h
    keybindlist.sh

### restart ###

# make sxhkd reload its configuration files
super + shift + x
	pkill -USR1 -x sxhkd && notify-send "sxhkd" "Config reloaded"

# relaunch polybar
super + shift + o
    ~/.config/polybar/launch.sh &

##super + shift + m
## TODO: for restarting spotifyd

# shutdown/reboot
super + shift + {r,d}
    dmenu_prompt.sh {"Are you sure you would like to reboot?" "reboot", "Are you sure you would like to shutdown?" "shutdown -h now"}

### ==================== bspwm hotkeys ==================== ###

# quit bspwm
super + shift + z
    dmenu_prompt.sh {"Are you sure you would like to exit this bspwm session?" "bspc quit"}

# restart bspwm
super + shift + g
	bspc wm -r

# close and kill
mod1 + shift + {c,v}
	bspc node -{c,k}

# alternate between the tiled and monocle layout
mod1 + s
	bspc desktop -l next

### state/flags ###

# set the window state
mod1 + {space,t,shift + f}
	bspc node -t {tiled,tiled,floating}

# toggle fullscreen
mod1 + f
    toggleFullscreen.sh

### focus/swap ###

# focus/swap the node in the given direction
mod1 + {_,shift + }{h,l}
	bspc node -{f,s} {west,east}
# node down movement (focus)
mod1 + j
    upDownNav.sh down
# node up movement (focus)
mod1 + k
    upDownNav.sh up
# swap node in the south direction
mod1 + shift + j
	bspc node -s south
# swap node in the south north
mod1 + shift + k
	bspc node -s north
# focus floating nodes and cycle throw them (down direction)
mod1 + super + j
    upDownNav.sh upFloat
# focus floating nodes and cycle throw them (up direction)
mod1 + super + k
    upDownNav.sh downFloat

# focus the last node
mod1 + {dead_grave,n}
	bspc node -f last

# focus the last desktop
mod1 + Tab
    bspc desktop -f last

# swap node with the last node
mod1 + shift + {dead_grave,n}
    bspc node -s last

# focus or send to the given desktop
mod1 + {_,shift + }{1-9}
	bspc {desktop -f,node -d} '^{1-9}'
# focus or send to the 10th desktop
mod1 + {_,shift + }F1
	bspc {desktop -f,node -d} 10
# focus or send to the 10th desktop
mod1 + {_,shift + }F2
	bspc {desktop -f,node -d} 11
# focus or send to the 10th desktop
mod1 + {_,shift + }F3
	bspc {desktop -f,node -d} 12
# focus or send to the 10th desktop
mod1 + {_,shift + }F4
	bspc {desktop -f,node -d} 13

# rotate
mod1 + {_,shift + } r
    bspc node @/ -R {90,-90}

# swap the current node and the biggest window on the focused monitor
mod1 + a
    bspc node -s biggest.window.local || bspc node -s last.local

# focus the prev/next monitor
mod1 + {w,e}
    bspc monitor -f {prev, next}

# send node to the prev/next monitor
mod1 + shift + {w,e}
    bspc node -m {prev,next} -f

# move current window to a pre-selected space
mod1 + m
    bspc node -n last.!automatic

### preselect ###

# preselect the direction
mod1 + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
mod1 + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
mod1 + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
mod1 + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

### receptacles ###

##TODO: better solution
# create a receptacle
mod1 + ctrl + shift + {h,j,k,l}
    bspc node --presel-dir {west,south,north,east} -i

# set the receptacle to a window
mod1 + ctrl + shift + s
    bspc node $(bspc query -N -n focused) -n $(bspc query -N -n .leaf.\!window -d focused)

# kill all receptacles on focused monitor
mod1 + ctrl + shift + d
    for win in $(bspc query -N -n .leaf.\!window -d focused) ; do bspc node $win -k ; done;

### move/resize ###

# expand a window by moving one of its side outward
mod1 + {Left,Down,Up,Right}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
mod1 + shift + {Left,Down,Up,Right}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + mod1 + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# set all nodes to the same size
mod1 + b
    bspc node @/ -B
